import sympy as sp

def newton_method(f_expr, x0, tol=1e-6, max_iter=100):
    x = sp.symbols('x')
    f = sp.lambdify(x, f_expr, 'math')
    f_prime = sp.lambdify(x, sp.diff(f_expr, x), 'math')

    xn = x0
    for n in range(max_iter):
        f_xn = f(xn)
        f_prime_xn = f_prime(xn)
        
        if f_prime_xn == 0:
            print("Törəmə sıfır oldu. Nyuton üsulu dayandı.")
            return None

        x_next = xn - f_xn / f_prime_xn

        if abs(x_next - xn) < tol:
            print(f"Kök təqribi: {x_next} (iterasiya sayı: {n+1})")
            return x_next

        xn = x_next

    print("Maksimum iterasiya sayı aşıldı. Yaxınlaşma baş vermədi.")
    return None

# Verilmiş funksiya
x = sp.symbols('x')
f_expr = (sp.exp(x) - 1) / (x - 1)
initial_guess = 0.75  # [0.5, 1.0] aralığında başlanğıc nöqtə

# Hesablama
newton_method(f_expr, initial_guess)
